-------------------------step1----------------------
create the ec2 with amzon Linux os server
then connect to the server
-- create rds database 
----------------- creation of rds cache---------------
select the rds go to actions click on create cache cluster 
-- just give name and click on create it 
---search for elastic cahe and open it 
-----------click on redies oss caches
------------open your cache and copy the cache endpoint with out port number 
---------------------install the dependencyes-----------------
sudo yum install mariadb105-server -y 
sudo yum install python3-pip -y
pip install pymysql redis	## dependencies for cache python file 

--------------connect to your rds database from server -------------
mysql -h <rdsendpoint> -u admin -p<rds-password>

mysql -h database-1.cpqu6ogu84z5.us-east-1.rds.amazonaws.com -u admin -pCloud123

------------------create a database and table with below configuration 
CREATE DATABASE test;

USE test;

CREATE TABLE users (
    user_id VARCHAR(50) PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    email VARCHAR(100)
);

--------------- Sample data for testing--------------------------------------------
INSERT INTO users (user_id, first_name, last_name, email)
VALUES ('12345', 'John', 'Doe', 'john.doe@example.com');

INSERT INTO users (user_id, first_name, last_name, email)
VALUES ('2345', 'Johny', 'aDoe', 'ajohn.doe@example.com');

------------- crete cache.py file ---------- 
######paste the  code 
##### and change the rds credentials in Rds config section 
########### and change elastic cache details in redis config section  according to your end--------
###############################this is code #######################

import pymysql
import redis
import json
import sys

# Redis config
redis_client = redis.Redis(
    host='veera-xibjly.serverless.use1.cache.amazonaws.com',
    port=6379,
    ssl=True,  # Set to True for ElastiCache with TLS
    decode_responses=True,
    socket_timeout=5
)

# RDS config
RDS_HOST = 'rds-main.cno6u86ymx4c.us-east-1.rds.amazonaws.com'
RDS_USER = 'admin'
RDS_PASSWORD = 'srivardhan'
RDS_DB_NAME = 'test'
TABLE_NAME = 'users'

def fetch_data_from_rds():
    try:
        connection = pymysql.connect(
            host=RDS_HOST,
            user=RDS_USER,
            password=RDS_PASSWORD,
            database=RDS_DB_NAME
        )
        print("üîó Connected to RDS")

        with connection.cursor() as cursor:
            cursor.execute(f"SELECT * FROM {TABLE_NAME} LIMIT 10;")
            rows = cursor.fetchall()
            return rows

    except Exception as e:
        print("‚ùå RDS Error:", e)
        return None

    finally:
        if 'connection' in locals():
            connection.close()

def main():
    cache_key = 'cached_table_data'
    bypass_cache = "--refresh" in sys.argv

    if not bypass_cache:
        cached_data = redis_client.get(cache_key)
        if cached_data:
            print("‚úÖ Fetched from Redis cache:")
            print(json.loads(cached_data))
            return

    print("‚öôÔ∏è No cache found or refresh requested. Fetching from RDS...")
    data = fetch_data_from_rds()
    if data:
        redis_client.set(cache_key, json.dumps(data), ex=90)
        print("üì¶ Cached in Redis:")
        print(data)
    else:
        print("‚ö†Ô∏è No data fetched from RDS.")

if __name__ == "__main__":
    main()


--------------------------------------------------------------after that run the file by using pythin3 cache.py -----------------------------
python3 cache.py

------now  first time your cache fetch the records form rds directly 
---------run again now you will get the records from cache only 
--------------- your rds cache is is stored up to  90 sec 
--------- in this 90 sec if we add new records in rds it wont refeleect in cache because cache wont take new records form rds upto 90 sec 
----------after 90 sec cache fetch the what ever the new records added in the database it will be fetched  